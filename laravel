Model は複数形をアクセスするためmigrateの時に複数形を作成する。
Routeを気を付けるform の場合は、ちゃんとpostにする。
fail()を使用する場合validatorを読んで使用する。

validateを日本語化するには以下のサイトを参考にする
https://qiita.com/Rock22/items/1db96c801d78ebafb7cc

redirect()を使用するとフォームの中身が空になるためoldを使用する。
↑（エラーの時）リダイレクトが同じ場合は、withInputで内容を持ってくる。

画像はストアで保存する。パスも保存しておかないと表示できないよ。
$temp_path = $imagefile->store('public/temp');

createは配列型で渡す。
Pan::create([
  'image' => $imagepath,
  'storename' => $request->storename,
  'panname' => $request->panname,
]);

{!! nl2br(e($pan->panname)) !!} エスケープ

paginate カスタマイズ
https://blog.hiroyuki90.com/articles/laravel-pagination/

//take(12)->get()->chunk(6);
$panspage = Pan::orderBy('created_at', 'desc')->paginate(12);
$pans = $panspage->chunk(6); //二次配列になる。viewで指定するのを忘れないこと。
https://readouble.com/laravel/5.5/ja/collections.html#method-chunk
paginateを一回変数に格納したほうが良い。orderByはコレクションになる。//takeでも対応できる。

更新する場合
$pan->fill($request->all())=>save(); //ベスト
配列内容を書き換える場合は、fill() と　all()を先に行うと楽。

storeは空では実行できない。
if ($request->hasFile('image') && $request->file('image')->isValid()) {}

echo より var_dumpにしたほうが中身が表示される。

where("permit" "1") これで許可したものや、決まった値のみが表視される。 

delete from tags;
ALTER TABLE `tablename` auto_increment = 1;
//連番をリセットする

$pans = Pan::all()->random(6); ランダム
idをそろえないと紐づけするのは厳しい

App\Store::find(1).pans()->get() で全て取れる。modelの関数が実行されるイメージです。
php artisan tinkerで調べる

多対多　中間テーブルはアルファベット順
checkboxはnameを配列にしてoldを取る 文字列の場合可能性が高いから照合するときも文字列にする

titleは、以下で設定
https://teratail.com/questions/208548

checkbox データをcheckboxに充てる。idを取り出しまわしているidにあっているか確認する.
@foreach ($tags as $tag)
    <input type="checkbox" name="tag[]" value="{!! nl2br(e($tag->id)) !!}" 
    id="tag-{!! nl2br(e($tag->id)) !!}" {{ is_array($pan->tags->all()) && in_array($tag->id, $pan->tags->pluck('id')->all(), true)? 'checked="checked"' : '' }}>
    <label for="tag-{!! nl2br(e($tag->id)) !!}" class="label create-label">{!! nl2br(e($tag->tagName)) !!}</label>
@endforeach

